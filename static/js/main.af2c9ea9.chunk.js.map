{"version":3,"sources":["firebaseConfig.js","firebase.js","components/PokemonList.js","components/Timer.js","components/Header.js","components/StartScreen.js","components/Dropdown.js","components/TargetBox.js","components/Feedback.js","components/GameScreen.js","components/EndScreen.js","components/Main.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","PokemonList","useState","imageList","setImageList","useEffect","storage","imageNames","ref","list","then","ListResult","urlList","items","map","imageRef","push","name","getDownloadURL","Promise","all","imagesInfo","url","index","catch","error","console","log","length","image","src","alt","Timer","startTimeRef","useRef","Date","now","current","currTime","setCurrTime","timer","setInterval","clearInterval","Math","floor","Header","props","gameEnded","className","gameStarted","StartScreen","onClick","startGame","Dropdown","top","left","foundPokemon","boxDimensions","window","innerWidth","style","handleClick","choices","choice","id","TargetBox","Feedback","message","pokemonName","GameScreen","x","y","coords","setCoords","searchList","setSearchList","userSelection","setUserSelection","setFoundPokemon","db","firestore","collection","doc","get","DocumentSnapshot","pokemonData","data","pokemon","update","set","startTime","FieldValue","serverTimestamp","imageURL","document","getElementById","pokemonList","remainingPokemon","found","a","xMinServer","xMin","xMaxServer","xMax","yMinServer","yMin","yMaxServer","yMax","mainImage","imgWidth","scrollWidth","imgHeight","scrollHeight","headerHeight","innerHeight","foundAllPokemon","currID","endTime","merge","endGame","validateSelection","click","target","tagName","selectionID","selectionName","textContent","xCoord","pageX","yCoord","pageY","href","rel","EndScreen","totalTime","setTotalTime","timestamps","seconds","calculateTime","Main","App","setGameStarted","setGameEnded","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.af2c9ea9.chunk.js","sourcesContent":["const firebaseConfig = {\n    apiKey: \"AIzaSyA7lyPyI42XBZIvt4c05DVfw87Tu-4IqZU\",\n    authDomain: \"wheres-waldo-odin-jp.firebaseapp.com\",\n    projectId: \"wheres-waldo-odin-jp\",\n    storageBucket: \"wheres-waldo-odin-jp.appspot.com\",\n    messagingSenderId: \"179199665105\",\n    appId: \"1:179199665105:web:6e232fa769b6e39befb6f0\"\n};\n\nexport default firebaseConfig;","import firebase from \"firebase/app\";\nimport firebaseConfig from \"./firebaseConfig\";\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import { useState, useEffect } from \"react\";\nimport firebase from \"../firebase\";\nimport \"firebase/storage\";\n\nfunction PokemonList() {\n    const [imageList, setImageList] = useState([]);\n\n    //on mount, get image list from firebase\n    useEffect(function getImageList() {\n        var storage = firebase.storage();\n        var imageNames = [];\n        storage.ref(\"to-find\").list()\n            .then((ListResult) => {\n                var imageRefList = ListResult.items;\n                var urlList = imageRefList.map((imageRef) => {\n                    imageNames.push(imageRef.name);\n                    return imageRef.getDownloadURL();\n                });\n                return Promise.all(urlList);\n            })\n            .then((urlList) => {\n                //wrap url and name in an object for each image\n                var imagesInfo = urlList.map((url, index) => {\n                    return {url, name: imageNames[index]};\n                });\n                setImageList(imagesInfo);\n            })\n            .catch((error) => {\n                console.log(\"Error retrieving images: \", error);\n            });\n    }, []);\n\n    if (imageList.length > 0) {\n        return (\n            <ul>\n                {imageList.map((image, index) => {\n                    return (\n                        <li key={index}>\n                            <img src={image.url} alt={image.name} />\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n\n    return (\n        <p>Loading images...</p>\n    );\n}\n\nexport default PokemonList;","import { useState, useRef, useEffect } from \"react\";\n\nfunction Timer() {\n    const startTimeRef = useRef(Date.now());\n    \n    const [currTime, setCurrTime] = useState(startTimeRef.current);\n\n    useEffect(() => {\n        var timer = setInterval(() => {\n            setCurrTime(Date.now());\n        }, 1000);\n\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    return (\n        <p>{Math.floor((currTime - startTimeRef.current) / 1000)}</p>\n    );\n}\n\nexport default Timer;","import PokemonList from \"./PokemonList\";\nimport Timer from \"./Timer\";\n\nfunction Header(props) {\n    return (\n        <header>\n            <h1>\n                {(props.gameEnded)\n                    ? \"You Caught 'Em All!\"\n                    : \"Gotta Catch 'Em All!\"\n                }\n            </h1>\n            <div className=\"progress-bar\">\n                {(props.gameEnded)\n                    ? <PokemonList />\n                    : (props.gameStarted) \n                    ? <>\n                        <PokemonList /> \n                        <Timer />\n                    </>\n                    : false\n                }\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","import PokemonList from \"./PokemonList\";\n\nfunction StartScreen(props) {\n    return (\n        <div className=\"start-screen\">\n            <p>Can you find and catch these Pokémon?</p>\n            <p>Click to capture.</p>\n            <PokemonList />\n            <button onClick={props.startGame}>Start</button>\n        </div>\n    );\n}\n\nexport default StartScreen;","function Dropdown(props) {\n    var top = props.top;\n    var left = props.left;\n\n    //if props.foundPokemon has a value (true or false)\n    //then player selection has been validated\n    //and dropdown box should not be rendered\n    if (\n        top !== null && left !== null \n        && props.foundPokemon === null\n    ) {\n        //calculate target box dimensions using CSS rule for .target-box\n        var boxDimensions = (window.innerWidth > 1000) \n            ? 100 + 10 : window.innerWidth / 10 + 10;\n\n        //position dropdown box to bottom right corner of target box\n        //later - change position if click on image edge\n        top += boxDimensions / 2;\n        left += boxDimensions / 2;\n\n        return (\n            <div \n                className=\"dropdown-box\"\n                style={{top: top, left: left}}\n            >\n                <ul onClick={props.handleClick}>\n                    {/* how to sort names? */}\n                    {props.choices.map((choice) => {\n                        return (\n                            <li key={choice.id}>\n                                <button id={choice.id}>{choice.name}</button>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        );\n    }\n\n    return null;\n}\n\nexport default Dropdown;","function TargetBox(props) {\n    var top = props.top;\n    var left = props.left;\n\n    //if props.foundPokemon has a value (true or false)\n    //then player selection has been validated\n    //and target box should not be rendered\n    if (\n        top !== null && left !== null \n        && props.foundPokemon === null\n    ) {\n        //calculate target box dimensions using CSS rule for .target-box\n        var boxDimensions = (window.innerWidth > 1000) \n            ? 100 + 10 : window.innerWidth / 10 + 10;\n\n        //center target box on click site\n        top -= boxDimensions / 2;\n        left -= boxDimensions / 2;\n\n        return (\n            <div \n                className=\"target-box\"\n                style={{top: top, left: left}}\n            >\n            </div>\n        );\n    }\n\n    return null;\n}\n\nexport default TargetBox;","function Feedback(props) {\n    //if props.foundPokemon has a value (true or false)\n    //then player selection has been validated\n    //and feedback should be rendered\n    if (props.foundPokemon !== null) {\n        var message = props.foundPokemon\n            ? `You found ${props.pokemonName}!` \n            : `That's not ${props.pokemonName}`;\n\n        return (\n            <div className={\"feedback-\" + props.foundPokemon}\n                style={{top: props.top, left: props.left}}\n            >\n                <p>{message}</p>\n            </div>\n        );\n    }\n    \n    return null;\n}\n\nexport default Feedback;","import { useState, useEffect } from \"react\";\nimport Dropdown from \"./Dropdown\";\nimport TargetBox from \"./TargetBox\";\nimport Feedback from \"./Feedback\";\nimport firebase from \"../firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nfunction GameScreen(props) {\n    const [coords, setCoords] = useState({x: null, y: null});\n    const [searchList, setSearchList] = useState([]);\n    const [userSelection, setUserSelection] = useState({id: null, name: null});\n    const [foundPokemon, setFoundPokemon] = useState(null);\n\n    //on mount, reset all found statuses to false\n    useEffect(function resetFoundStatus() {\n        var db = firebase.firestore();\n\n        db.collection(\"toFind\").doc(\"pokemonList\").get()\n        .then((DocumentSnapshot) => {\n            var pokemonData = DocumentSnapshot.data();\n            \n            for (const pokemon in pokemonData) {\n                db.collection(\"toFind\").doc(\"pokemonList\").update({\n                    [`${pokemon}.found`]: false\n                });\n            }\n        });\n    }, []);\n\n    //on mount, set game start time in firebase \n    useEffect(function setGameStartTime() {\n        var db = firebase.firestore();\n\n        db.collection(\"timer\").doc(\"timestamps\").set({\n            startTime: firebase.firestore.FieldValue.serverTimestamp()\n        });\n    }, []);\n\n    //on mount, get main image from firebase\n    useEffect(function getImage() {\n        var storage = firebase.storage();\n\n        storage.ref(\"main-image\").list()\n        .then((ListResult) => {\n            var imageRef = ListResult.items[0];\n            return imageRef.getDownloadURL();\n        })\n        .then((imageURL) => {\n            var mainImageElem = document.getElementById(\"main-image\");\n            mainImageElem.src = imageURL;\n        })\n    }, []);\n\n    //when coords change, get list of pokemon to find\n    useEffect(() => {\n        //get search list if user has clicked image\n        //user has clicked image if coords are set\n        var db = firebase.firestore();\n\n        db.collection(\"toFind\").doc(\"pokemonList\").get()\n        .then((DocumentSnapshot) => {\n            var pokemonList = DocumentSnapshot.data();\n            var remainingPokemon = [];\n\n            for (const pokemon in pokemonList) {\n                if (!pokemonList[pokemon].found) {\n                    remainingPokemon.push({\n                        id: pokemonList[pokemon].id,\n                        name: pokemonList[pokemon].name\n                    });\n                }\n            }\n            \n            setSearchList(remainingPokemon);\n        });\n    }, [coords.x, coords.y]);\n\n    //validate every new selection\n    useEffect(() => {\n        async function validateSelection() {\n            try {\n                //get ratio ranges for id from firebase\n                var db = firebase.firestore();\n    \n                var DocumentSnapshot = await db.collection(\"toFind\").doc(\"pokemonList\").get();\n        \n                var pokemonData = DocumentSnapshot.data();\n    \n                var {\n                    xMin: xMinServer, xMax: xMaxServer,\n                    yMin: yMinServer, yMax: yMaxServer \n                } = pokemonData[userSelection.id].coords;\n        \n                //update function numbers after CSS is finalized\n                //calc ratio ranges for click using target box size\n        \n                //calculate target box dimensions using CSS rule for .target-box\n                var boxDimensions = (window.innerWidth > 1000) \n                    ? 100 + 10 : window.innerWidth / 10 + 10;\n        \n                var mainImage = document.getElementById(\"main-image\");\n                var imgWidth = mainImage.scrollWidth;\n                var imgHeight = mainImage.scrollHeight;\n        \n                var xMin = (coords.x - boxDimensions / 2) / imgWidth;\n                var xMax = (coords.x + boxDimensions / 2) / imgWidth;\n        \n                //adjust y coordinates for header height\n                var headerHeight = window.innerHeight * 0.2;\n                var yMin = (coords.y - boxDimensions / 2 - headerHeight) / imgHeight;\n                var yMax = (coords.y + boxDimensions / 2 - headerHeight) / imgHeight;\n        \n                //if ranges do not overlap, incorrect choice\n                if (\n                    (xMin > xMaxServer || xMax < xMinServer) ||\n                    (yMin > yMaxServer || yMax < yMinServer)\n                ) {\n                    setFoundPokemon(false);\n                } else {\n                    setFoundPokemon(true);\n                    \n                    let foundAllPokemon = true;\n\n                    for (const pokemon in pokemonData) {\n                        let currID = pokemonData[pokemon].id;\n\n                        if (!pokemonData[pokemon].found) {\n                            if (currID === userSelection.id) {\n                                db.collection(\"toFind\").doc(\"pokemonList\").update({\n                                    [`${currID}.found`]: true\n                                });\n                            } else {\n                                foundAllPokemon = false;\n                            }\n                        }\n                    }\n\n                    if (foundAllPokemon) {\n                        await db.collection(\"timer\").doc(\"timestamps\").set({\n                            endTime: firebase.firestore.FieldValue.serverTimestamp()\n                        }, { merge: true });\n                        \n                        props.endGame();\n                    }\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        \n        if (userSelection.id && foundPokemon === null) {\n            validateSelection();\n        }\n    });\n\n    function handleSelection(click) {\n        if (click.target.tagName !== \"BUTTON\") {\n            console.log(\"Please click a button\");\n            return;\n        }\n\n        var selectionID = click.target.id;\n        var selectionName = click.target.textContent;\n\n        setUserSelection({id: selectionID, name: selectionName});\n    }\n\n    function handleImageClick(click) {\n        var xCoord = click.pageX;\n        var yCoord = click.pageY;\n        \n        //reset state\n        setCoords({x: xCoord, y: yCoord});\n        setSearchList([]);\n        setUserSelection({id: null, name: null});\n        setFoundPokemon(null);\n    }\n\n    //display loading message while image loads?\n    return (\n        <div className=\"game-screen\">\n            <Dropdown top={coords.y} left={coords.x} choices={searchList} \n                foundPokemon={foundPokemon} handleClick={handleSelection} />\n            <TargetBox top={coords.y} left={coords.x} \n                foundPokemon={foundPokemon} />\n            {/* render Feedback if foundPokemon !== null */}\n            <Feedback top={coords.y} left={coords.x} foundPokemon={foundPokemon} \n                pokemonName={userSelection.name}\n            />\n            <img \n                id=\"main-image\" onClick={handleImageClick}\n                src=\"\" alt=\"All Pokémon from Generations I-VI\" \n            />\n            <a \n                href=\"https://www.deviantart.com/viking011/art/Pokemon-Poster-436455502\"\n                target=\"_blank\"\n                rel='noreferrer'\n            >Art by Viking011 on DeviantArt</a>\n        </div>\n    );\n}\n\nexport default GameScreen;","import { useState, useEffect } from \"react\";\nimport firebase from \"../firebase\";\nimport \"firebase/firestore\";\n\nfunction EndScreen() {\n    const [totalTime, setTotalTime] = useState(null);\n\n    //get start and end time\n    useEffect(() => {\n        async function calculateTime() {\n            var db = firebase.firestore();\n            var DocumentSnapshot = await db.collection(\"timer\").doc(\"timestamps\").get();\n            var timestamps = DocumentSnapshot.data();\n            setTotalTime(timestamps.endTime.seconds - timestamps.startTime.seconds);\n        }\n\n        calculateTime();\n    }, []);\n\n    return (\n        <div>\n            <p>Congratulations!</p>\n            {(totalTime !== null) &&\n                <p>It took you <strong>{totalTime}</strong> seconds to catch them all.</p>\n            }\n        </div>\n    );\n}\n\nexport default EndScreen;","import StartScreen from \"./StartScreen\";\nimport GameScreen from \"./GameScreen\";\nimport EndScreen from \"./EndScreen\";\n\nfunction Main(props) {\n    return (\n        <main>\n            {(props.gameEnded)\n                ? <EndScreen />\n                : (props.gameStarted)\n                ? <GameScreen endGame={props.endGame} />\n                : <StartScreen startGame={props.startGame} />\n            }\n        </main>\n    );\n}\n\nexport default Main;","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport './App.css';\n\nfunction App() {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameEnded, setGameEnded] = useState(false);\n\n  function startGame() {\n    setGameStarted(true);\n  }\n\n  function endGame() {\n    setGameEnded(true);\n  }\n\n  return (\n    <>\n      <Header gameStarted={gameStarted} gameEnded={gameEnded} />\n      <Main gameStarted={gameStarted} gameEnded={gameEnded}\n        startGame={startGame} endGame={endGame} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}