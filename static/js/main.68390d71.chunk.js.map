{"version":3,"sources":["firebaseConfig.js","firebase.js","components/PokemonList.js","components/Timer.js","components/Header.js","components/Dropdown.js","components/TargetBox.js","components/GameScreen.js","components/StartScreen.js","components/Main.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","PokemonList","useState","imageList","setImageList","useEffect","storage","imageNames","ref","list","then","ListResult","urlList","items","map","imageRef","push","name","getDownloadURL","Promise","all","imagesInfo","url","index","catch","error","console","log","length","image","src","alt","Timer","startTimeRef","useRef","Date","now","current","currTime","setCurrTime","timer","setInterval","clearInterval","Math","floor","Header","props","gameStarted","className","Dropdown","top","left","boxDimensions","window","innerWidth","style","onClick","handleClick","id","TargetBox","GameScreen","x","y","coords","setCoords","click","a","target","tagName","playerSelection","db","firestore","collection","doc","get","DocumentSnapshot","ratios","data","xMinServer","xMin","xMaxServer","xMax","yMinServer","yMin","yMaxServer","yMax","mainImage","document","getElementById","imgWidth","scrollWidth","imgHeight","scrollHeight","headerHeight","innerHeight","textContent","set","startTime","imageURL","xCoord","pageX","yCoord","pageY","href","rel","StartScreen","startGame","Main","App","setGameStarted","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.68390d71.chunk.js","sourcesContent":["const firebaseConfig = {\n    apiKey: \"AIzaSyA7lyPyI42XBZIvt4c05DVfw87Tu-4IqZU\",\n    authDomain: \"wheres-waldo-odin-jp.firebaseapp.com\",\n    projectId: \"wheres-waldo-odin-jp\",\n    storageBucket: \"wheres-waldo-odin-jp.appspot.com\",\n    messagingSenderId: \"179199665105\",\n    appId: \"1:179199665105:web:6e232fa769b6e39befb6f0\"\n};\n\nexport default firebaseConfig;","import firebase from \"firebase/app\";\nimport firebaseConfig from \"./firebaseConfig\";\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import { useState, useEffect } from \"react\";\nimport firebase from \"../firebase\";\nimport \"firebase/storage\";\n\nfunction PokemonList() {\n    const [imageList, setImageList] = useState([]);\n\n    //on mount, get image list from firebase\n    useEffect(function getImageList() {\n        var storage = firebase.storage();\n        var imageNames = [];\n        storage.ref(\"to-find\").list()\n            .then((ListResult) => {\n                var imageRefList = ListResult.items;\n                var urlList = imageRefList.map((imageRef) => {\n                    imageNames.push(imageRef.name);\n                    return imageRef.getDownloadURL();\n                });\n                return Promise.all(urlList);\n            })\n            .then((urlList) => {\n                //wrap url and name in an object for each image\n                var imagesInfo = urlList.map((url, index) => {\n                    return {url, name: imageNames[index]};\n                });\n                setImageList(imagesInfo);\n            })\n            .catch((error) => {\n                console.log(\"Error retrieving images: \", error);\n            });\n    }, []);\n\n    if (imageList.length > 0) {\n        return (\n            <ul>\n                {imageList.map((image, index) => {\n                    return (\n                        <li key={index}>\n                            <img src={image.url} alt={image.name} />\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n\n    return (\n        <p>Loading images...</p>\n    );\n}\n\nexport default PokemonList;","import { useState, useRef, useEffect } from \"react\";\n\nfunction Timer() {\n    const startTimeRef = useRef(Date.now());\n    \n    const [currTime, setCurrTime] = useState(startTimeRef.current);\n\n    useEffect(() => {\n        var timer = setInterval(() => {\n            setCurrTime(Date.now());\n        }, 1000);\n\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    return (\n        <p>{Math.floor((currTime - startTimeRef.current) / 1000)}</p>\n    );\n}\n\nexport default Timer;","import PokemonList from \"./PokemonList\";\nimport Timer from \"./Timer\";\n\nfunction Header(props) {\n    return (\n        <header>\n            <h1>Gotta Catch 'Em All!</h1>\n            {props.gameStarted &&\n                <div className=\"progress-bar\">\n                    <PokemonList /> \n                    <Timer />\n                </div>\n            }\n        </header>\n    );\n}\n\nexport default Header;","function Dropdown(props) {\n    var top = props.top;\n    var left = props.left;\n\n    if (top !== null && left !== null) {\n        //calculate target box dimensions using CSS rule for .target-box\n        var boxDimensions = (window.innerWidth > 1000) \n            ? 100 + 10 : window.innerWidth / 10 + 10;\n\n        //position dropdown box to bottom right corner of target box\n        //later - change position if click on image edge\n        top += boxDimensions / 2;\n        left += boxDimensions / 2;\n\n        return (\n            <div \n                className=\"dropdown-box\"\n                style={{top: top, left: left}}\n            >\n                <ul onClick={props.handleClick}>\n                    <li><button id=\"charizard\">Charizard</button></li>\n                    <li><button id=\"greninja\">Greninja</button></li>\n                    <li><button id=\"shinytentacool\">Shiny Tentacool</button></li>\n                    <li><button id=\"missingno\">MissingNo.</button></li>\n                </ul>\n            </div>\n        );\n    }\n\n    return null;\n}\n\nexport default Dropdown;","function TargetBox(props) {\n    var top = props.top;\n    var left = props.left;\n\n    if (top !== null && left !== null) {\n        //calculate target box dimensions using CSS rule for .target-box\n        var boxDimensions = (window.innerWidth > 1000) \n            ? 100 + 10 : window.innerWidth / 10 + 10;\n\n        //center target box on click site\n        top -= boxDimensions / 2;\n        left -= boxDimensions / 2;\n\n        return (\n            <div \n                className=\"target-box\"\n                style={{top: top, left: left}}\n            >\n            </div>\n        );\n    }\n\n    return null;\n}\n\nexport default TargetBox;","import { useState, useEffect } from \"react\";\nimport Dropdown from \"./Dropdown\";\nimport TargetBox from \"./TargetBox\";\nimport firebase from \"../firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nfunction GameScreen() {\n    const [coords, setCoords] = useState({x: null, y: null});\n\n    //on mount, set game start time in firebase \n    useEffect(function setGameStartTime() {\n        var db = firebase.firestore();\n        db.collection(\"timer\").doc(\"timestamps\").set({\n            startTime: Date.now()\n        })\n        .catch((error) => {\n            console.error(\"Error writing document: \", error);\n        });\n    }, []);\n\n    //on mount, get image from firebase\n    useEffect(function getImage() {\n        //get the main image url from \"main-image\" folder of firebase storage\n        var storage = firebase.storage();\n        storage.ref(\"main-image\").list()\n            .then((ListResult) => {\n                var imageRef = ListResult.items[0];\n                return imageRef.getDownloadURL();\n            })\n            .then((imageURL) => {\n                var mainImageElem = document.getElementById(\"main-image\");\n                mainImageElem.src = imageURL;\n            })\n            .catch((error) => {\n                console.error(\"Error retrieving image url: \", error);\n            });\n    }, []);\n\n    async function handleClick(click) {\n        //update function numbers after CSS is finalized\n\n        if (click.target.tagName !== \"BUTTON\") {\n            console.log(\"Please click a button\");\n            return;\n        }\n\n        try {\n            var playerSelection = click.target.id;\n            \n            //get ratio ranges for id from firebase\n            var db = firebase.firestore();\n            var DocumentSnapshot = await db.collection(\"location\").doc(playerSelection).get();\n            var ratios = DocumentSnapshot.data();\n            var {\n                xMin: xMinServer, xMax: xMaxServer,\n                yMin: yMinServer, yMax: yMaxServer \n            } = ratios;\n    \n            //calc ratio ranges for click using target box size\n    \n            //calculate target box dimensions using CSS rule for .target-box\n            var boxDimensions = (window.innerWidth > 1000) \n                ? 100 + 10 : window.innerWidth / 10 + 10;\n    \n            var mainImage = document.getElementById(\"main-image\");\n            var imgWidth = mainImage.scrollWidth;\n            var imgHeight = mainImage.scrollHeight;\n    \n            var xMin = (coords.x - boxDimensions / 2) / imgWidth;\n            var xMax = (coords.x + boxDimensions / 2) / imgWidth;\n    \n            //adjust y coordinates for header height\n            var headerHeight = window.innerHeight * 0.2;\n            var yMin = (coords.y - boxDimensions / 2 - headerHeight) / imgHeight;\n            var yMax = (coords.y + boxDimensions / 2 - headerHeight) / imgHeight;\n    \n            //if ranges do not overlap, incorrect choice\n            if (\n                (xMin > xMaxServer || xMax < xMinServer) ||\n                (yMin > yMaxServer || yMax < yMinServer)\n            ) {\n                console.log(`Oops, that's not ${click.target.textContent}`)\n            } else {\n                console.log(`You found ${click.target.textContent}!`);\n            }\n    \n            //remove target box and dropdown box\n    \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    function getCoords(click) {\n        var xCoord = click.pageX;\n        var yCoord = click.pageY;\n        \n        console.log(\"pageX: \" + xCoord, \"pageY: \" + yCoord);\n        setCoords({x: xCoord, y: yCoord});\n    }\n\n    //display loading message while image loads?\n    return (\n        <div className=\"game-screen\">\n            <Dropdown top={coords.y} left={coords.x} handleClick={handleClick} />\n            <TargetBox top={coords.y} left={coords.x} />\n            <img \n                id=\"main-image\" onClick={getCoords}\n                src=\"\" alt=\"All Pokémon from Generations I-VI\" \n            />\n            <a \n                href=\"https://www.deviantart.com/viking011/art/Pokemon-Poster-436455502\"\n                target=\"_blank\"\n                rel='noreferrer'\n            >Art by Viking011 on DeviantArt</a>\n        </div>\n    );\n}\n\nexport default GameScreen;","import PokemonList from \"./PokemonList\";\n\nfunction StartScreen(props) {\n    return (\n        <div className=\"start-screen\">\n            <p>Can you find and catch these Pokémon?</p>\n            <p>Click to capture.</p>\n            <PokemonList />\n            <button onClick={props.startGame}>Start</button>\n        </div>\n    );\n}\n\nexport default StartScreen;","import GameScreen from \"./GameScreen\";\nimport StartScreen from \"./StartScreen\";\n\nfunction Main(props) {\n    return (\n        <main>\n            {props.gameStarted\n                ? <GameScreen />\n                : <StartScreen startGame={props.startGame} />\n            }\n        </main>\n    );\n}\n\nexport default Main;","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport './App.css';\n\nfunction App() {\n  const [gameStarted, setGameStarted] = useState(false);\n\n  function startGame() {\n    setGameStarted(true);\n  }\n\n  return (\n    <>\n      <Header gameStarted={gameStarted} />\n      <Main gameStarted={gameStarted} startGame={startGame} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}